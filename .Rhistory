library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
d
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + + geom_bar(stat = "indentity")
#p <- p + geom_bar("indentity")
#p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
#p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
d
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + + geom_bar(stat = "indentity")
#p <- p + geom_bar("indentity")
#p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
#p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
d
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + geom_bar(stat = "indentity")
#p <- p + geom_bar("indentity")
#p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
#p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
d
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + geom_bar(stat = "indentity")
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
d
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + geom_bar(stat = "identity")
#p <- p + geom_bar("indentity")
#p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
#p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
rm(all)
rm( )
rm(*)
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
rm(list = ls())   # 预清楚所有对象
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
lv <- c("企业web版","企业客户端","TA强赎","企业app") # 设定因子水平的顺序
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar("identity")
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
rm(list = ls())   # 预清楚所有对象
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
lv <- c("企业web版","企业客户端","TA强赎","企业app") # 设定因子水平的顺序
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + + geom_bar("identity")
#p <- p + geom_bar("identity")
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
rm(list = ls())   # 预清楚所有对象
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
lv <- c("企业web版","企业客户端","TA强赎","企业app") # 设定因子水平的顺序
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + + geom_bar("identity")
#p <- p + geom_bar("identity")
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
rm(list = ls())   # 预清楚所有对象
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
lv <- c("企业web版","企业客户端","TA强赎","企业app") # 设定因子水平的顺序
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + + geom_bar("identity")
#p <- p + geom_bar("identity")
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + + geom_bar("identity")
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
rm(list = ls())   # 预清楚所有对象
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
lv <- c("企业web版","企业客户端","TA强赎","企业app") # 设定因子水平的顺序
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + geom_bar("identity")
#p <- p + geom_bar("identity")
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
rm(list = ls())   # 预清楚所有对象
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
lv <- c("企业web版","企业客户端","TA强赎","企业app") # 设定因子水平的顺序
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + geom_bar("identity")
#p <- p + geom_bar("identity")
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
rm(list = ls())   # 预清楚所有对象
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
lv <- c("企业web版","企业客户端","TA强赎","企业app") # 设定因子水平的顺序
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + geom_bar(stat = "identity")
#p <- p + geom_bar("identity")
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
rm(list = ls())   # 预清楚所有对象
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
lv <- c("企业web版","企业客户端","TA强赎","企业app") # 设定因子水平的顺序
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + geom_bar(stat = "identity")
#p <- p + geom_bar("identity")
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
rm(list = ls())   # 预清楚所有对象
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
lv <- c("企业web版","企业客户端","TA强赎","企业app") # 设定因子水平的顺序
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + geom_bar(stat = "identity")
#p <- p + geom_bar("identity")
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
rm(list = ls())   # 预清楚所有对象
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
rm(list = ls())   # 预清楚所有对象
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
lv <- c("企业web版","企业客户端","TA强赎","企业app") # 设定因子水平的顺序
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + geom_bar(stat = "identity")
#p <- p + geom_bar("identity")
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
rm(list = ls())   # 预清楚所有对象
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
lv <- c("企业web版","企业客户端","TA强赎","企业app") # 设定因子水平的顺序
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + geom_bar(stat = "identity")
#p <- p + geom_bar("identity")
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 绘制不同产品交易额大小的条形图
q <- ggplot(d,aes(x=product,y=t_amt,fill=product))
q <- p + geom_bar(stat = "identity")
q <- q + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
q <- q + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
q <- q + theme(text = element_text(family = "WenQuanYiMicroHei"))
q
rm(list = ls())   # 预清楚所有对象
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
rm(list = ls())   # 预清楚所有对象
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
lv <- c("企业web版","企业客户端","TA强赎","企业app") # 设定因子水平的顺序
# 绘制不同产品交易额大小的条形图
q <- ggplot(d,aes(x=product,y=t_amt,fill=product))
q <- p + geom_bar(stat = "identity")
q <- q + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
q <- q + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
q <- q + theme(text = element_text(family = "WenQuanYiMicroHei"))
q
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
rm(list = ls())   # 预清楚所有对象
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
lv <- c("企业web版","企业客户端","TA强赎","企业app") # 设定因子水平的顺序
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product)) + geom_bar(stat = "identity")
#p <- p + geom_bar("identity")
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 绘制不同产品交易额大小的条形图
q <- ggplot(d,aes(x=product,y=t_amt,fill=product))
q <- q + geom_bar(stat = "identity")
q <- q + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
q <- q + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
q <- q + theme(text = element_text(family = "WenQuanYiMicroHei"))
q
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
rm(list = ls())   # 预清楚所有对象
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
lv <- c("企业web版","企业客户端","TA强赎","企业app") # 设定因子水平的顺序
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity")
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 绘制不同产品交易额大小的条形图
q <- ggplot(d,aes(x=product,y=t_amt,fill=product))
q <- q + geom_bar(stat = "identity")
q <- q + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
q <- q + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
q <- q + theme(text = element_text(family = "WenQuanYiMicroHei"))
q
p
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity",width = 0.5)
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity",width = 0.6)
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
rm(list = ls())   # 预清楚所有对象
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
lv <- c("企业web版","企业客户端","TA强赎","企业app") # 设定因子水平的顺序
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity",width = 0.6)
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 绘制不同产品交易额大小的条形图
q <- ggplot(d,aes(x=product,y=t_amt,fill=product))
q <- q + geom_bar(stat = "identity",width = 0.6)
q <- q + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
q <- q + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易笔数",fill="企业版产品")
q <- q + theme(text = element_text(family = "WenQuanYiMicroHei"))
q
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity",width = 0.6)
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(axis.title.y = element_text(angle = 90))
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity",width = 0.6)
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(axis.title.y = element_text(angle = 0))
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity",width = 0.6)
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(axis.title.y = element_text(angle = 0))
p <- p + theme(plot.title = element_text(vjust = -3))
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity",width = 0.6)
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(axis.title.y = element_text(angle = 0))
p <- p + theme(plot.title = element_text(vjust = -8))
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity",width = 0.6)
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(axis.title.y = element_text(angle = 0))
p <- p + theme(plot.title = element_text(vjust = -8,hjust = 10))
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity",width = 0.6)
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(axis.title.y = element_text(angle = 0))
p <- p + theme(plot.title = element_text(vjust = -8,hjust = 2))
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity",width = 0.6)
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(axis.title.y = element_text(angle = 0))
p <- p + theme(plot.title = element_text(vjust = -8,hjust = 1))
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity",width = 0.6)
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(axis.title.y = element_text(angle = 0))
p <- p + theme(plot.title = element_text(vjust = -12,hjust = 1))
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity",width = 0.6)
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(axis.title.y = element_text(angle = 0))
p <- p + theme(plot.title = element_text(vjust = -12,hjust = 1,colour = "blue"))
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity",width = 0.6)
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(axis.title.y = element_text(angle = 0))
p <- p + theme(plot.title = element_text(vjust = -12,hjust = 1,colour = "gray"))
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
library(RColorBrewer)
display.brewer.all()
display.brewer.all(OrRd)
brewer.pal(7,OrRd)
brewer.pal(7,PuBu)
# 设置工作目录
setwd("~/Documents/R/exchange/")
# 从exchange.csv读取原始数据
rm(list = ls())   # 预清楚所有对象
ex <- read.csv("exchange.csv",header = T)
colnames(ex) <- c("type","amount","date","product")  # 重新命名数据的列名称
# 绘制按照不产品上的交易情况的条形图
library(ggplot2)   # 加载ggplot2包
library(plyr)      # 加载plyr包
d <- ddply(ex,"product",summarise,t_con = length(product),t_amt = sum(amount))   # 生成d
lv <- c("企业web版","企业客户端","TA强赎","企业app") # 设定因子水平的顺序
# 绘制不同产品交易笔数的条形图
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity",width = 0.6)
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(axis.title.y = element_text(angle = 0))
p <- p + theme(plot.title = element_text(vjust = -12,hjust = 1,colour = "blue"))
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity",width = 0.6)
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(axis.title.y = element_text(angle = 0))
p <- p + theme(plot.title = element_text(hjust = 1,colour = "blue"))  # 改变标题的位置和颜色
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
p <- ggplot(d,aes(x=product,y=t_con,fill=product))
p <- p + geom_bar(stat = "identity",width = 0.6)
p <- p + scale_x_discrete(limits=lv)  #改变柱状图排序按照lv水平排序
p <- p + labs(title="不同产品发生的交易量（过去一年）",x=NULL,y="交易额",fill="企业版产品")
p <- p + theme(axis.title.y = element_text(angle = 0))
p <- p + theme(plot.title = element_text(hjust = 0.6,colour = "blue"))  # 改变标题的位置和颜色
p <- p + theme(text = element_text(family = "WenQuanYiMicroHei"))
p
p
ls()
